/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package navirebizerte;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.PreparedStatement;

/**
 *
 * @author ASUS
 */
public class escale extends javax.swing.JFrame {

    /**
     * Creates new form escale
     */
     Connection con;
    Statement s;
    ResultSet r;
    DefaultTableModel model=new DefaultTableModel();
    DefaultTableModel m=new DefaultTableModel();
    DefaultTableModel mod=new DefaultTableModel();
    public escale() {
        initComponents();
         con=new DbConnect().connect();
     
    model.addColumn("Id");   
    model.addColumn("Numéro de Poste"); 
    model.addColumn("Durée Escale");
    model.addColumn("Cout Escale"); 
    model.addColumn("Demande Id"); 
    model.addColumn("Avis");   
    
    m.addColumn("Id");   
    m.addColumn("Id Navire"); 
    m.addColumn("Id Agent");
    m.addColumn("Heure Arrivé"); 
    m.addColumn("Heure Sortie"); 
    
mod.addColumn("Numéro");
 mod.addColumn("Id Proposition");
mod.addColumn("Pilote Arrivé");
mod.addColumn("Pilote Sortie");
mod.addColumn("Prochaine Destination");
   
    try
    {
        model.setRowCount(0);
        s=con.createStatement();
        ResultSet Rs= s.executeQuery("Select * from propositionescale");
        while(Rs.next())
        {
            model.addRow(new Object[]{Rs.getString("id"),Rs.getString("numeroPoste"),Rs.getString("dureeEscale"),Rs.getString("coutEscale"),Rs.getString("demandeId"),Rs.getString("Avis")});
        }
    }
    catch(Exception e)
    {
        JOptionPane.showMessageDialog(rootPane, e);
    }
    propositionTable.setModel(model);
    
    try
    {
        m.setRowCount(0);
        s=con.createStatement();
        ResultSet Rs= s.executeQuery("Select * from demandeescale");
        while(Rs.next())
        {
            m.addRow(new Object[]{Rs.getString("id"),Rs.getString("navireId"),Rs.getString("agentResponsableId"),Rs.getString("heureArrivee"),Rs.getString("heureSortie")});
        }
    }
    catch(Exception e)
    {
        JOptionPane.showMessageDialog(rootPane, e);
    }
    demandeTable.setModel(m);
    try
{
mod.setRowCount(0);
s=con.createStatement();
ResultSet Rs= s.executeQuery("Select * from ficheescale");
while(Rs.next())
{
mod.addRow(new Object[]{Rs.getString("numero"),Rs.getString("idProposition"),Rs.getString("piloteArr"),Rs.getString("piloteSortie"),Rs.getString("prochaineDestination")});
}
} catch(Exception e)
{
JOptionPane.showMessageDialog(rootPane, e);
}

 ficheTable.setModel(mod);
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        demandeIdField = new javax.swing.JTextField();
        coutEscaleField = new javax.swing.JTextField();
        editBtn = new javax.swing.JButton();
        addBtn = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        avisField = new javax.swing.JTextField();
        numPosteField = new javax.swing.JTextField();
        dureeEscaleField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        idField = new javax.swing.JTextField();
        researchBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        refreshBtn = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        propositionTable = new javax.swing.JTable();
        prochaineDestinationField = new javax.swing.JTextField();
        piloteSortieField = new javax.swing.JTextField();
        modifBtn = new javax.swing.JButton();
        ajouteBtn = new javax.swing.JButton();
        idPropositionField = new javax.swing.JTextField();
        piloteArriveField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        numeroField = new javax.swing.JTextField();
        rechercheBtn = new javax.swing.JButton();
        supprimeBtn = new javax.swing.JButton();
        actualiseBtn = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        ficheTable = new javax.swing.JTable();
        heureSortieField = new javax.swing.JTextField();
        modifierBtn = new javax.swing.JButton();
        ajouterBtn = new javax.swing.JButton();
        idResponsableField = new javax.swing.JTextField();
        heureArriveField = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        requiredIdField = new javax.swing.JTextField();
        idNavireField = new javax.swing.JTextField();
        rechercherBtn = new javax.swing.JButton();
        supprimerBtn = new javax.swing.JButton();
        jLabel25 = new javax.swing.JLabel();
        actualiserBtn = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        demandeTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Escale");
        setPreferredSize(new java.awt.Dimension(1130, 700));
        setResizable(false);
        getContentPane().setLayout(null);
        getContentPane().add(demandeIdField);
        demandeIdField.setBounds(10, 240, 140, 30);
        getContentPane().add(coutEscaleField);
        coutEscaleField.setBounds(170, 180, 140, 30);

        editBtn.setBackground(new java.awt.Color(255, 255, 255));
        editBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        editBtn.setForeground(new java.awt.Color(0, 0, 54));
        editBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/edit.png"))); // NOI18N
        editBtn.setText("Modifier");
        editBtn.setBorderPainted(false);
        editBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                editBtnMouseClicked(evt);
            }
        });
        editBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBtnActionPerformed(evt);
            }
        });
        getContentPane().add(editBtn);
        editBtn.setBounds(170, 320, 130, 40);

        addBtn.setBackground(new java.awt.Color(255, 255, 255));
        addBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        addBtn.setForeground(new java.awt.Color(0, 0, 54));
        addBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/plus.png"))); // NOI18N
        addBtn.setText("Ajouter");
        addBtn.setBorderPainted(false);
        addBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addBtnMouseClicked(evt);
            }
        });
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });
        getContentPane().add(addBtn);
        addBtn.setBounds(30, 320, 130, 40);

        jLabel6.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Avis");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(170, 220, 140, 14);
        getContentPane().add(avisField);
        avisField.setBounds(170, 240, 140, 30);

        numPosteField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numPosteFieldActionPerformed(evt);
            }
        });
        getContentPane().add(numPosteField);
        numPosteField.setBounds(10, 120, 300, 30);
        getContentPane().add(dureeEscaleField);
        dureeEscaleField.setBounds(10, 180, 140, 30);

        jLabel5.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Demande Id");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(10, 220, 140, 14);

        jLabel4.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Cout Escale");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(170, 160, 120, 14);

        jLabel3.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Numéro de Poste");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(10, 100, 130, 14);

        jLabel17.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Proposition ");
        getContentPane().add(jLabel17);
        jLabel17.setBounds(90, 30, 150, 29);

        jLabel10.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Durée Escale");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(10, 160, 120, 14);

        idField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        idField.setForeground(new java.awt.Color(0, 0, 54));
        idField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        idField.setText("Entrer Id");
        getContentPane().add(idField);
        idField.setBounds(170, 420, 130, 40);

        researchBtn.setBackground(new java.awt.Color(255, 255, 255));
        researchBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        researchBtn.setForeground(new java.awt.Color(0, 0, 54));
        researchBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/research.png"))); // NOI18N
        researchBtn.setText("Rechercher");
        researchBtn.setBorderPainted(false);
        researchBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                researchBtnMouseClicked(evt);
            }
        });
        researchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                researchBtnActionPerformed(evt);
            }
        });
        getContentPane().add(researchBtn);
        researchBtn.setBounds(30, 420, 130, 40);

        deleteBtn.setBackground(new java.awt.Color(255, 255, 255));
        deleteBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        deleteBtn.setForeground(new java.awt.Color(0, 0, 54));
        deleteBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/remove.png"))); // NOI18N
        deleteBtn.setText("Supprimer");
        deleteBtn.setBorderPainted(false);
        deleteBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteBtnMouseClicked(evt);
            }
        });
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });
        getContentPane().add(deleteBtn);
        deleteBtn.setBounds(30, 370, 130, 40);

        refreshBtn.setBackground(new java.awt.Color(255, 255, 255));
        refreshBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        refreshBtn.setForeground(new java.awt.Color(0, 0, 54));
        refreshBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/refresh.png"))); // NOI18N
        refreshBtn.setText("Actualiser");
        refreshBtn.setBorderPainted(false);
        refreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBtnActionPerformed(evt);
            }
        });
        getContentPane().add(refreshBtn);
        refreshBtn.setBounds(170, 370, 130, 40);

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator2);
        jSeparator2.setBounds(360, 40, 10, 660);

        propositionTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Numéro de Poste", "Durée Escale", "Cout Escale", "Demande Id", "Avis"
            }
        ));
        propositionTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                propositionTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(propositionTable);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 480, 330, 150);
        getContentPane().add(prochaineDestinationField);
        prochaineDestinationField.setBounds(390, 240, 300, 30);

        piloteSortieField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                piloteSortieFieldActionPerformed(evt);
            }
        });
        getContentPane().add(piloteSortieField);
        piloteSortieField.setBounds(550, 180, 140, 30);

        modifBtn.setBackground(new java.awt.Color(255, 255, 255));
        modifBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        modifBtn.setForeground(new java.awt.Color(0, 0, 54));
        modifBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/edit.png"))); // NOI18N
        modifBtn.setText("Modifier");
        modifBtn.setBorderPainted(false);
        modifBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                modifBtnMouseClicked(evt);
            }
        });
        getContentPane().add(modifBtn);
        modifBtn.setBounds(550, 320, 130, 40);

        ajouteBtn.setBackground(new java.awt.Color(255, 255, 255));
        ajouteBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ajouteBtn.setForeground(new java.awt.Color(0, 0, 54));
        ajouteBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/plus.png"))); // NOI18N
        ajouteBtn.setText("Ajouter");
        ajouteBtn.setBorderPainted(false);
        ajouteBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ajouteBtnMouseClicked(evt);
            }
        });
        getContentPane().add(ajouteBtn);
        ajouteBtn.setBounds(410, 320, 130, 40);
        getContentPane().add(idPropositionField);
        idPropositionField.setBounds(390, 120, 300, 30);
        getContentPane().add(piloteArriveField);
        piloteArriveField.setBounds(390, 180, 140, 30);

        jLabel9.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Prochaine Destination");
        getContentPane().add(jLabel9);
        jLabel9.setBounds(390, 220, 140, 14);

        jLabel11.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Pilote Sortie");
        getContentPane().add(jLabel11);
        jLabel11.setBounds(550, 160, 120, 14);

        jLabel12.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Id Proposition ");
        getContentPane().add(jLabel12);
        jLabel12.setBounds(390, 100, 130, 14);

        jLabel18.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Fiche d'escale");
        getContentPane().add(jLabel18);
        jLabel18.setBounds(470, 30, 150, 29);

        jLabel14.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Pilolte Arrivé");
        getContentPane().add(jLabel14);
        jLabel14.setBounds(390, 160, 120, 14);

        numeroField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        numeroField.setForeground(new java.awt.Color(0, 0, 54));
        numeroField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        numeroField.setText("Entrer Numéro");
        numeroField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numeroFieldActionPerformed(evt);
            }
        });
        getContentPane().add(numeroField);
        numeroField.setBounds(550, 420, 130, 40);

        rechercheBtn.setBackground(new java.awt.Color(255, 255, 255));
        rechercheBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rechercheBtn.setForeground(new java.awt.Color(0, 0, 54));
        rechercheBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/research.png"))); // NOI18N
        rechercheBtn.setText("Rechercher");
        rechercheBtn.setBorderPainted(false);
        rechercheBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rechercheBtnMouseClicked(evt);
            }
        });
        rechercheBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rechercheBtnActionPerformed(evt);
            }
        });
        getContentPane().add(rechercheBtn);
        rechercheBtn.setBounds(410, 420, 130, 40);

        supprimeBtn.setBackground(new java.awt.Color(255, 255, 255));
        supprimeBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        supprimeBtn.setForeground(new java.awt.Color(0, 0, 54));
        supprimeBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/remove.png"))); // NOI18N
        supprimeBtn.setText("Supprimer");
        supprimeBtn.setBorderPainted(false);
        supprimeBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                supprimeBtnMouseClicked(evt);
            }
        });
        supprimeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supprimeBtnActionPerformed(evt);
            }
        });
        getContentPane().add(supprimeBtn);
        supprimeBtn.setBounds(410, 370, 130, 40);

        actualiseBtn.setBackground(new java.awt.Color(255, 255, 255));
        actualiseBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        actualiseBtn.setForeground(new java.awt.Color(0, 0, 54));
        actualiseBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/refresh.png"))); // NOI18N
        actualiseBtn.setText("Actualiser");
        actualiseBtn.setBorderPainted(false);
        actualiseBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                actualiseBtnMouseClicked(evt);
            }
        });
        actualiseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualiseBtnActionPerformed(evt);
            }
        });
        getContentPane().add(actualiseBtn);
        actualiseBtn.setBounds(550, 370, 130, 40);

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator3);
        jSeparator3.setBounds(740, 40, 10, 660);

        ficheTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Numéro", "Id Proposition", "Pilote Arrivé", "Pilote Sortie", "Prochaine Destination"
            }
        ));
        ficheTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ficheTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(ficheTable);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(390, 480, 330, 150);
        getContentPane().add(heureSortieField);
        heureSortieField.setBounds(920, 180, 140, 30);

        modifierBtn.setBackground(new java.awt.Color(255, 255, 255));
        modifierBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        modifierBtn.setForeground(new java.awt.Color(0, 0, 54));
        modifierBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/edit.png"))); // NOI18N
        modifierBtn.setText("Modifier");
        modifierBtn.setBorderPainted(false);
        modifierBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                modifierBtnMouseClicked(evt);
            }
        });
        getContentPane().add(modifierBtn);
        modifierBtn.setBounds(920, 320, 130, 40);

        ajouterBtn.setBackground(new java.awt.Color(255, 255, 255));
        ajouterBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ajouterBtn.setForeground(new java.awt.Color(0, 0, 54));
        ajouterBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/plus.png"))); // NOI18N
        ajouterBtn.setText("Ajouter");
        ajouterBtn.setBorderPainted(false);
        ajouterBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ajouterBtnMouseClicked(evt);
            }
        });
        ajouterBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ajouterBtnActionPerformed(evt);
            }
        });
        getContentPane().add(ajouterBtn);
        ajouterBtn.setBounds(780, 320, 130, 40);

        idResponsableField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idResponsableFieldActionPerformed(evt);
            }
        });
        getContentPane().add(idResponsableField);
        idResponsableField.setBounds(920, 120, 140, 30);
        getContentPane().add(heureArriveField);
        heureArriveField.setBounds(760, 180, 140, 30);

        jLabel19.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("Heure de sortie");
        getContentPane().add(jLabel19);
        jLabel19.setBounds(920, 160, 120, 14);

        jLabel20.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("Id Responsable ");
        getContentPane().add(jLabel20);
        jLabel20.setBounds(920, 100, 100, 14);

        jLabel22.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("Demande d'escale");
        getContentPane().add(jLabel22);
        jLabel22.setBounds(840, 30, 210, 29);

        jLabel23.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setText("Heure d'arrivé");
        getContentPane().add(jLabel23);
        jLabel23.setBounds(760, 160, 120, 14);

        requiredIdField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        requiredIdField.setForeground(new java.awt.Color(0, 0, 54));
        requiredIdField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        requiredIdField.setText("Entrer Id");
        requiredIdField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requiredIdFieldActionPerformed(evt);
            }
        });
        getContentPane().add(requiredIdField);
        requiredIdField.setBounds(920, 420, 130, 40);

        idNavireField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idNavireFieldActionPerformed(evt);
            }
        });
        getContentPane().add(idNavireField);
        idNavireField.setBounds(760, 120, 140, 30);

        rechercherBtn.setBackground(new java.awt.Color(255, 255, 255));
        rechercherBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rechercherBtn.setForeground(new java.awt.Color(0, 0, 54));
        rechercherBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/research.png"))); // NOI18N
        rechercherBtn.setText("Rechercher");
        rechercherBtn.setBorderPainted(false);
        rechercherBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rechercherBtnMouseClicked(evt);
            }
        });
        rechercherBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rechercherBtnActionPerformed(evt);
            }
        });
        getContentPane().add(rechercherBtn);
        rechercherBtn.setBounds(780, 420, 130, 40);

        supprimerBtn.setBackground(new java.awt.Color(255, 255, 255));
        supprimerBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        supprimerBtn.setForeground(new java.awt.Color(0, 0, 54));
        supprimerBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/remove.png"))); // NOI18N
        supprimerBtn.setText("Supprimer");
        supprimerBtn.setBorderPainted(false);
        supprimerBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                supprimerBtnMouseClicked(evt);
            }
        });
        supprimerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supprimerBtnActionPerformed(evt);
            }
        });
        getContentPane().add(supprimerBtn);
        supprimerBtn.setBounds(780, 370, 130, 40);

        jLabel25.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setText("Id Navire");
        getContentPane().add(jLabel25);
        jLabel25.setBounds(760, 100, 80, 14);

        actualiserBtn.setBackground(new java.awt.Color(255, 255, 255));
        actualiserBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        actualiserBtn.setForeground(new java.awt.Color(0, 0, 54));
        actualiserBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/refresh.png"))); // NOI18N
        actualiserBtn.setText("Actualiser");
        actualiserBtn.setBorderPainted(false);
        actualiserBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                actualiserBtnMouseClicked(evt);
            }
        });
        actualiserBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualiserBtnActionPerformed(evt);
            }
        });
        getContentPane().add(actualiserBtn);
        actualiserBtn.setBounds(920, 370, 130, 40);

        demandeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Id", "Id Navire", "Id Responsable", "Heure d'arrivé", "Heure de sortie"
            }
        ));
        demandeTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                demandeTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(demandeTable);

        getContentPane().add(jScrollPane3);
        jScrollPane3.setBounds(760, 480, 330, 150);

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setForeground(new java.awt.Color(0, 0, 54));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/arrow.png"))); // NOI18N
        jButton1.setBorderPainted(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(10, 10, 20, 20);

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/bleu.png"))); // NOI18N
        getContentPane().add(jLabel7);
        jLabel7.setBounds(-10, -20, 1460, 790);

        pack();
    }// </editor-fold>//GEN-END:initComponents
private void deplace(int i)
    {
        try
        {
            idField.setText(model.getValueAt(i,0).toString());
            numPosteField.setText(model.getValueAt(i,1).toString());
            dureeEscaleField.setText(model.getValueAt(i,2).toString());
            coutEscaleField.setText(model.getValueAt(i,3).toString());
            demandeIdField.setText(model.getValueAt(i,4).toString());
            avisField.setText(model.getValueAt(i,5).toString());
        }
        catch(Exception e)
                {
                    System.err.println(e);
                    JOptionPane.showMessageDialog(null,"erreur de deplacement "+e.getLocalizedMessage());
                }
    }
     public void refresh()
     {
            try
    {   model.setRowCount(0);
        ResultSet Rs= s.executeQuery("Select * from propositionescale");
        while(Rs.next())
        {
            model.addRow(new Object[]{Rs.getString("id"),Rs.getString("numeroPoste"),Rs.getString("dureeEscale"),Rs.getString("coutEscale"),Rs.getString("demandeId"),Rs.getString("avis")});
        }
    }
    catch(Exception e)
    {
        System.err.println(e);
    }
    propositionTable.setModel(model);
     }
     
     
     public void actualiser()
     {
            try
    {   m.setRowCount(0);
        ResultSet Rs= s.executeQuery("Select * from demandeescale");
        while(Rs.next())
        {
            m.addRow(new Object[]{Rs.getString("id"),Rs.getString("navireId"),Rs.getString("agentResponsableId"),Rs.getString("heureArrivee"),Rs.getString("heureSortie")});
        }
    }
    catch(Exception e)
    {
        System.err.println(e);
    }
    demandeTable.setModel(m);
     }
     private void deplacer(int i)
    {
        try
        {
            requiredIdField.setText(m.getValueAt(i,0).toString());
            heureArriveField.setText(m.getValueAt(i,3).toString());
            heureSortieField.setText(m.getValueAt(i,4).toString());
            idNavireField.setText(m.getValueAt(i,1).toString());
            idResponsableField.setText(m.getValueAt(i,2).toString());
            
        }
        catch(Exception e)
                {
                    System.err.println(e);
                    JOptionPane.showMessageDialog(null,"erreur de deplacement "+e.getLocalizedMessage());
                }
    }
     public void ref()
{
try
{ mod.setRowCount(0);
ResultSet Rs= s.executeQuery("Select * from ficheescale");
while(Rs.next())
{
mod.addRow(new Object[]{Rs.getString("numero"),Rs.getString("idProposition"),Rs.getString("piloteArr"),Rs.getString("piloteSortie"),Rs.getString("prochaineDestination")});
}
}
catch(Exception e)
{
System.err.println(e);
}
ficheTable.setModel(mod);
}
     private void dep(int i)
{
try
{
numeroField.setText(mod.getValueAt(i,0).toString());
idPropositionField.setText(mod.getValueAt(i,1).toString());
piloteArriveField.setText(mod.getValueAt(i,2).toString());
piloteSortieField.setText(mod.getValueAt(i,3).toString());
prochaineDestinationField.setText(mod.getValueAt(i,4).toString());
}
catch(Exception e)
{
System.err.println(e);
JOptionPane.showMessageDialog(null,"erreur de deplacement "+e.getLocalizedMessage());
}
}
    private void researchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_researchBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_researchBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void refreshBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_refreshBtnActionPerformed

    private void rechercheBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rechercheBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rechercheBtnActionPerformed

    private void supprimeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supprimeBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_supprimeBtnActionPerformed

    private void actualiseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualiseBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_actualiseBtnActionPerformed

    private void rechercherBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rechercherBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rechercherBtnActionPerformed

    private void supprimerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supprimerBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_supprimerBtnActionPerformed

    private void actualiserBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualiserBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_actualiserBtnActionPerformed

    private void numeroFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numeroFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numeroFieldActionPerformed

    private void addBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addBtnMouseClicked

        String numeroPoste=numPosteField.getText();
        String dureeEscale=dureeEscaleField.getText();
        String coutEscale=coutEscaleField.getText();
        String demandeId=demandeIdField.getText();
        String avis=avisField.getText();

        String requete="insert into propositionescale(numeroPoste,dureeEscale,coutEscale,demandeId,avis)VALUES('"+numeroPoste+"','"+dureeEscale+"','"+coutEscale+"','"+demandeId+"','"+avis+"')";
  
             try
        { 
            PreparedStatement s1 = con.prepareStatement("Select count(*) from posteaccostage where numero = ?");
s1.setString(1, numeroPoste);
ResultSet rs1 = s1.executeQuery();
rs1.next();
int n1 = rs1.getInt("count(*)");
PreparedStatement s2 = con.prepareStatement("Select count(*) from demandeescale where id = ?");
s2.setString(1, demandeId);
ResultSet rs2 = s2.executeQuery();
rs2.next();
int n2 = rs2.getInt("count(*)");
String errorString = "";
if( n1 == 0){
errorString += "Poste Pas Trouvé, Veuillez Vérifier Votre Choix\n";
}
if( n2 == 0){
errorString += "demande d'escale Pas Trouvé, Veuillez Vérifier Votre Choix\n";
}
if(errorString != ""){
JOptionPane.showMessageDialog(null, errorString);
return;
}
            s.executeUpdate(requete);
            JOptionPane.showMessageDialog(null,"Proposition d'escale est ajouté avec succès!");
            numPosteField.setText("");
            dureeEscaleField.setText("");
            coutEscaleField.setText("");
            demandeIdField.setText("");
            avisField.setText("");
            refresh();
        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(null,ex.getMessage());
        }
    }//GEN-LAST:event_addBtnMouseClicked

    private void propositionTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_propositionTableMouseClicked
         try
        {
            int i =propositionTable.getSelectedRow();
            deplace(i);
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,"erreur de deplacement "+e.getLocalizedMessage());
        }
    }//GEN-LAST:event_propositionTableMouseClicked

    private void numPosteFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numPosteFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numPosteFieldActionPerformed

    private void editBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_editBtnActionPerformed

    private void editBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editBtnMouseClicked
       String numeroPoste=numPosteField.getText();
        String dureeEscale=dureeEscaleField.getText();
        String coutEscale=coutEscaleField.getText();
        String demandeId=demandeIdField.getText();
        String avis=avisField.getText();
        try
        {
            PreparedStatement s1 = con.prepareStatement("Select count(*) from posteaccostage where numero = ?");
s1.setString(1, numeroPoste);
ResultSet rs1 = s1.executeQuery();
rs1.next();
int n1 = rs1.getInt("count(*)");
PreparedStatement s2 = con.prepareStatement("Select count(*) from demandeescale where id = ?");
s2.setString(1, demandeId);
ResultSet rs2 = s2.executeQuery();
rs2.next();
int n2 = rs2.getInt("count(*)");
String errorString = "";
if( n1 == 0){
errorString += "Poste Pas Trouvé, Veuillez Vérifier Votre Choix\n";
}
if( n2 == 0){
errorString += "demande d'escale Pas Trouvé, Veuillez Vérifier Votre Choix\n";
}
if(errorString != ""){
JOptionPane.showMessageDialog(null, errorString);
return;
}
            if(JOptionPane.showConfirmDialog(null,"Confirmer la modification","modification",JOptionPane.YES_NO_OPTION)==JOptionPane.OK_OPTION)
            {
                s.executeUpdate("UPDATE propositionescale SET numeroPoste='"+numPosteField.getText()+"',dureeEscale='"+dureeEscaleField.getText()+"',coutEscale='"+coutEscaleField.getText()+"',demandeId='"+demandeIdField.getText()+"',avis='"+avisField.getText()+"' WHERE id="+idField.getText());
            }
            refresh();
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,"erreur de modification!!"+e.getMessage());
            System.err.println(e);
        }
    }//GEN-LAST:event_editBtnMouseClicked

    private void deleteBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteBtnMouseClicked
         try
        {
            if (JOptionPane.showConfirmDialog(null,"attention vous avez supprimer une proposition , est ce que tu et sure?","supprimer proposition",JOptionPane.YES_NO_OPTION)==JOptionPane.OK_OPTION)
            if(idField.getText().length()!=0)
            {
                s.executeUpdate("Delete From propositionescale where id = "+idField.getText());
                refresh();
            }
            else
            {
                JOptionPane.showMessageDialog(null,"veuillez SVP remplir le champ id !");
            }
        }
        catch (Exception e)
        {
            JOptionPane.showMessageDialog(null,"eurreur de supprimer \n"+e.getMessage());
        }
    }//GEN-LAST:event_deleteBtnMouseClicked

    private void researchBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_researchBtnMouseClicked
         try
        {
            model.setRowCount(0);
            {
                r=s.executeQuery("Select * From propositionescale WHERE id = '"+idField.getText()+"'");

            }

            while(r.next())
            {
                Object [] propositionescale={r.getInt(1),r.getInt(2),r.getTime(3),r.getDouble(4),r.getInt(5),r.getBoolean(6)};
                model.addRow(propositionescale);
            }
            if (model.getRowCount()==0){JOptionPane.showMessageDialog(null,"il y a aucune proposition");}
            else{int i=0;
                deplace(i);
            }

        }
        catch(Exception e)
        {
            System.err.println(e);
            JOptionPane.showMessageDialog(null,e.getMessage());
        }
    }//GEN-LAST:event_researchBtnMouseClicked

    private void demandeTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_demandeTableMouseClicked
        try
        {
            int i =demandeTable.getSelectedRow();
            deplacer(i);
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,"erreur de deplacement "+e.getLocalizedMessage());
        }
    }//GEN-LAST:event_demandeTableMouseClicked

    private void ajouterBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ajouterBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ajouterBtnActionPerformed

    private void ajouterBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ajouterBtnMouseClicked

        String heureArrivee=heureArriveField.getText();
        String heureSortie=heureSortieField.getText();
        String navireId=idNavireField.getText();
        String agentResponsableId=idResponsableField.getText();
       

        String requete="insert into demandeescale(navireId,agentResponsableId,heureArrivee,heureSortie)VALUES('"+navireId+"','"+agentResponsableId+"','"+heureArrivee+"','"+heureSortie+"')";
        try
        { 
            PreparedStatement s1 = con.prepareStatement("Select count(*) from navire where id = ?");
s1.setString(1, idNavireField.getText());
ResultSet rs1 = s1.executeQuery();
rs1.next();
int n1 = rs1.getInt("count(*)");
PreparedStatement s2 = con.prepareStatement("Select count(*) from agentconsignataire where reference = ?");
s2.setString(1, idResponsableField.getText());
ResultSet rs2 = s2.executeQuery();
rs2.next();
int n2 = rs2.getInt("count(*)");
String errorString = "";
if( n1 == 0){
errorString += "Navire Pas Trouvé, Veuillez Vérifier Votre Choix\n";
}
if( n2 == 0){
errorString += "Agent Consignataire Pas Trouvé, Veuillez Vérifier Votre Choix\n";
}
if(errorString != ""){
JOptionPane.showMessageDialog(null, errorString);
return;
}
            s.executeUpdate(requete);
            JOptionPane.showMessageDialog(null,"Demande d'escale est ajouté avec succès!");
            heureArriveField.setText("");
            heureSortieField.setText("");
            idNavireField.setText("");
            idResponsableField.setText("");
            actualiser();
        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(null,ex.getMessage());
        }        
    }//GEN-LAST:event_ajouterBtnMouseClicked

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addBtnActionPerformed

    private void idNavireFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idNavireFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idNavireFieldActionPerformed

    private void idResponsableFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idResponsableFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idResponsableFieldActionPerformed

    private void modifierBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_modifierBtnMouseClicked
          String heureArrivee=heureArriveField.getText();
        String heureSortie=heureSortieField.getText();
        String navireId=idNavireField.getText();
        String agentResponsableId=idResponsableField.getText();
        try
        {
             PreparedStatement s1 = con.prepareStatement("Select count(*) from navire where id = ?");
s1.setString(1, idNavireField.getText());
ResultSet rs1 = s1.executeQuery();
rs1.next();
int n1 = rs1.getInt("count(*)");
PreparedStatement s2 = con.prepareStatement("Select count(*) from agentconsignataire where reference = ?");
s2.setString(1, idResponsableField.getText());
ResultSet rs2 = s2.executeQuery();
rs2.next();
int n2 = rs2.getInt("count(*)");
String errorString = "";
if( n1 == 0){
errorString += "Navire Pas Trouvé, Veuillez Vérifier Votre Choix\n";
}
if( n2 == 0){
errorString += "Agent Consignataire Pas Trouvé, Veuillez Vérifier Votre Choix\n";
}
if(errorString != ""){
JOptionPane.showMessageDialog(null, errorString);
return;
}
            if(JOptionPane.showConfirmDialog(null,"Confirmer la modification","modification",JOptionPane.YES_NO_OPTION)==JOptionPane.OK_OPTION)
            {
                s.executeUpdate("UPDATE demandeescale SET navireId='"+idNavireField.getText()+"',agentResponsableId='"+idResponsableField.getText()+"',heureArrivee='"+heureArriveField.getText()+"',heureSortie='"+heureSortieField.getText()+"' WHERE id="+requiredIdField.getText());
            }
            actualiser();
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,"erreur de modification!!"+e.getMessage());
            System.err.println(e);
        }
    }//GEN-LAST:event_modifierBtnMouseClicked

    private void requiredIdFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requiredIdFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_requiredIdFieldActionPerformed

    private void supprimerBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_supprimerBtnMouseClicked
       try
        {
            if (JOptionPane.showConfirmDialog(null,"attention vous avez supprimer une demande , est ce que tu et sure?","supprimer demande",JOptionPane.YES_NO_OPTION)==JOptionPane.OK_OPTION)
            if(idField.getText().length()!=0)
            {
                s.executeUpdate("Delete From demandeescale where id = "+requiredIdField.getText());
                actualiser();
            }
            else
            {
                JOptionPane.showMessageDialog(null,"veuillez SVP remplir le champ id !");
            }
        }
        catch (Exception e)
        {
            JOptionPane.showMessageDialog(null,"eurreur de supprimer \n"+e.getMessage());
        }
    }//GEN-LAST:event_supprimerBtnMouseClicked

    private void rechercherBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rechercherBtnMouseClicked
        try
        {
            m.setRowCount(0);
            {
                r=s.executeQuery("Select * From demandeescale WHERE id = '"+requiredIdField.getText()+"'");

            }

            while(r.next())
            {
                Object [] demandeescale={r.getInt(1),r.getInt(4),r.getInt(5),r.getTime(2),r.getTime(3)};
                m.addRow(demandeescale);
            }
            if (m.getRowCount()==0){JOptionPane.showMessageDialog(null,"il y a aucune proposition");}
            else{int i=0;
                deplacer(i);
            }

        }
        catch(Exception e)
        {
            System.err.println(e);
            JOptionPane.showMessageDialog(null,e.getMessage());
        }
    }//GEN-LAST:event_rechercherBtnMouseClicked

    private void piloteSortieFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_piloteSortieFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_piloteSortieFieldActionPerformed

    private void ficheTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ficheTableMouseClicked
        try
{
int i =ficheTable.getSelectedRow();
dep(i);
}
catch(Exception e)
{
JOptionPane.showMessageDialog(null,"erreur de deplacement "+e.getLocalizedMessage());
}
    }//GEN-LAST:event_ficheTableMouseClicked

    private void ajouteBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ajouteBtnMouseClicked

String numero=numeroField.getText();
String idProposition=idPropositionField.getText();
String piloteArrive=piloteArriveField.getText();
String piloteSortie=piloteSortieField.getText();
String prochaineDestination=prochaineDestinationField.getText();
String requete="insert into ficheescale (idProposition,piloteArr,piloteSortie,prochaineDestination)VALUES('"+idProposition+"','"+piloteArrive+"','"+piloteSortie+"','"+prochaineDestination+"')";
try
{
    PreparedStatement s1 = con.prepareStatement("Select count(*) from pilote where id = ?");
s1.setString(1, piloteArrive);
ResultSet rs1 = s1.executeQuery();
rs1.next();
int n1 = rs1.getInt("count(*)");
PreparedStatement s2 = con.prepareStatement("Select count(*) from pilote where id = ?");
s2.setString(1, piloteSortie);
ResultSet rs2 = s2.executeQuery();
rs2.next();
int n2 = rs2.getInt("count(*)");

PreparedStatement s3 = con.prepareStatement("Select count(*) from propositionescale where id = ?");
s3.setString(1, idProposition);
ResultSet rs3 = s3.executeQuery();
rs3.next();
int n3 = rs3.getInt("count(*)");
String errorString = "";
if( n1 == 0){
errorString += "Pilote d'arrivé Pas Trouvé, Veuillez Vérifier Votre Choix\n";
}
if( n2 == 0){
errorString += "Pilote de sortie Pas Trouvé, Veuillez Vérifier Votre Choix\n";
}
if( n3 == 0){
errorString += "Proposition d'escale Pas Trouvé, Veuillez Vérifier Votre Choix\n";
}
if(errorString != ""){
JOptionPane.showMessageDialog(null, errorString);
return;
}
s.executeUpdate(requete);
JOptionPane.showMessageDialog(null,"Fiche d'escale est ajouté avec succès!");
numeroField.setText("");
idPropositionField.setText("");
piloteArriveField.setText("");
piloteSortieField.setText("");
prochaineDestinationField.setText("");
ref();
}
catch(Exception ex)
{
JOptionPane.showMessageDialog(null,ex.getMessage());
}
    }//GEN-LAST:event_ajouteBtnMouseClicked

    private void modifBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_modifBtnMouseClicked
String numero=numeroField.getText();
String idProposition=idPropositionField.getText();
String piloteArrive=piloteArriveField.getText();
String piloteSortie=piloteSortieField.getText();
String prochaineDestination=prochaineDestinationField.getText();
        try
{
    PreparedStatement s1 = con.prepareStatement("Select count(*) from pilote where id = ?");
s1.setString(1, piloteArrive);
ResultSet rs1 = s1.executeQuery();
rs1.next();
int n1 = rs1.getInt("count(*)");
PreparedStatement s2 = con.prepareStatement("Select count(*) from pilote where id = ?");
s2.setString(1, piloteSortie);
ResultSet rs2 = s2.executeQuery();
rs2.next();
int n2 = rs2.getInt("count(*)");

PreparedStatement s3 = con.prepareStatement("Select count(*) from propositionescale where id = ?");
s3.setString(1, idProposition);
ResultSet rs3 = s3.executeQuery();
rs3.next();
int n3 = rs3.getInt("count(*)");
String errorString = "";
if( n1 == 0){
errorString += "Pilote d'arrivé Pas Trouvé, Veuillez Vérifier Votre Choix\n";
}
if( n2 == 0){
errorString += "Pilote de sortie Pas Trouvé, Veuillez Vérifier Votre Choix\n";
}
if( n3 == 0){
errorString += "Proposition d'escale Pas Trouvé, Veuillez Vérifier Votre Choix\n";
}
if(errorString != ""){
JOptionPane.showMessageDialog(null, errorString);
return;
}
if(JOptionPane.showConfirmDialog(null,"Confirmer la modification","modification",JOptionPane.YES_NO_OPTION)==JOptionPane.OK_OPTION)
{
    PreparedStatement stmt = con.prepareStatement("Update ficheescale set piloteArr=?, piloteSortie=?, idProposition=?, prochaineDestination=? where numero = ?");
stmt.setString(1, piloteArrive);
stmt.setString(2, piloteSortie);
stmt.setString(3, idProposition);
stmt.setString(4, prochaineDestination);
stmt.setString(5, numero);
stmt.executeUpdate();
}
ref();
}
catch(Exception e)
{
JOptionPane.showMessageDialog(null,"erreur de modification!!"+e.getMessage());
System.err.println(e);
}
    }//GEN-LAST:event_modifBtnMouseClicked

    private void supprimeBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_supprimeBtnMouseClicked
        try
{
if (JOptionPane.showConfirmDialog(null,"attention vous avez supprimer une proposition , est ce que tu et sure?","supprimer proposition",JOptionPane.YES_NO_OPTION)==JOptionPane.OK_OPTION)
if(numeroField.getText().length()!=0)
{
    String number =numeroField.getText();
s.executeUpdate("Delete From ficheescale where numero = "+number);
ref();
}
else
{
JOptionPane.showMessageDialog(null,"veuillez SVP remplir le champ numero !");
}
}
catch (Exception e)
{
JOptionPane.showMessageDialog(null,"eurreur de supprimer \n"+e.getMessage());
}
    }//GEN-LAST:event_supprimeBtnMouseClicked

    private void actualiseBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_actualiseBtnMouseClicked
        ref();
    }//GEN-LAST:event_actualiseBtnMouseClicked

    private void actualiserBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_actualiserBtnMouseClicked
        actualiser();
    }//GEN-LAST:event_actualiserBtnMouseClicked

    private void rechercheBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rechercheBtnMouseClicked
       try
{
mod.setRowCount(0);
{
    String numerof =numeroField.getText();
r=s.executeQuery("Select * From ficheescale WHERE numero = '"+numerof+"'");

 }

 while(r.next())
{
Object [] ficheescale={r.getInt(1),r.getInt(4),r.getInt(2),r.getInt(3),r.getString(5)};
mod.addRow(ficheescale);
}
if (mod.getRowCount()==0){JOptionPane.showMessageDialog(null,"il y a aucune fiche d'escale");}
else{int i=0;
dep(i);
}

 }
catch(Exception e)
{
System.err.println(e);
JOptionPane.showMessageDialog(null,e.getMessage());
}
    }//GEN-LAST:event_rechercheBtnMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                welcome back = new welcome();
                back.setVisible(true);
            }
        });
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(escale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(escale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(escale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(escale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new escale().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton actualiseBtn;
    private javax.swing.JButton actualiserBtn;
    private javax.swing.JButton addBtn;
    private javax.swing.JButton ajouteBtn;
    private javax.swing.JButton ajouterBtn;
    private javax.swing.JTextField avisField;
    private javax.swing.JTextField coutEscaleField;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JTextField demandeIdField;
    private javax.swing.JTable demandeTable;
    private javax.swing.JTextField dureeEscaleField;
    private javax.swing.JButton editBtn;
    private javax.swing.JTable ficheTable;
    private javax.swing.JTextField heureArriveField;
    private javax.swing.JTextField heureSortieField;
    private javax.swing.JTextField idField;
    private javax.swing.JTextField idNavireField;
    private javax.swing.JTextField idPropositionField;
    private javax.swing.JTextField idResponsableField;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JButton modifBtn;
    private javax.swing.JButton modifierBtn;
    private javax.swing.JTextField numPosteField;
    private javax.swing.JTextField numeroField;
    private javax.swing.JTextField piloteArriveField;
    private javax.swing.JTextField piloteSortieField;
    private javax.swing.JTextField prochaineDestinationField;
    private javax.swing.JTable propositionTable;
    private javax.swing.JButton rechercheBtn;
    private javax.swing.JButton rechercherBtn;
    private javax.swing.JButton refreshBtn;
    private javax.swing.JTextField requiredIdField;
    private javax.swing.JButton researchBtn;
    private javax.swing.JButton supprimeBtn;
    private javax.swing.JButton supprimerBtn;
    // End of variables declaration//GEN-END:variables
}
